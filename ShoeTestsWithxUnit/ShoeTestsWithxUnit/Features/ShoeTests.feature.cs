// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ShoeTestsWithxUnit.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ShoeTestsFeature : object, Xunit.IClassFixture<ShoeTestsFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "ShoeTests.feature"
#line hidden
        
        public ShoeTestsFeature(ShoeTestsFeature.FixtureData fixtureData, ShoeTestsWithxUnit_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "ShoeTests", "  In order to test Shoe Test Website\r\n  As an user\r\n  I want to be be able to tes" +
                    "t all monthly brand shoe details", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Verify HOME Button on Landing Page")]
        [Xunit.TraitAttribute("FeatureTitle", "ShoeTests")]
        [Xunit.TraitAttribute("Description", "Verify HOME Button on Landing Page")]
        [Xunit.TraitAttribute("Category", "ShoeTest")]
        [Xunit.InlineDataAttribute("January", new string[0])]
        public virtual void VerifyHOMEButtonOnLandingPage(string month, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ShoeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Month", month);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify HOME Button on Landing Page", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
 testRunner.Given("Navigate to Shoe Store site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
 testRunner.And(string.Format("Click on \"{0}\" menu link", month), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
 testRunner.When(string.Format("\"{0}\" page is loaded", month), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
 testRunner.Then("Click on HOME button on top left and verify HOME page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Verify Choose a brand on Landing Page")]
        [Xunit.TraitAttribute("FeatureTitle", "ShoeTests")]
        [Xunit.TraitAttribute("Description", "Verify Choose a brand on Landing Page")]
        [Xunit.TraitAttribute("Category", "ShoeTest")]
        public virtual void VerifyChooseABrandOnLandingPage()
        {
            string[] tagsOfScenario = new string[] {
                    "ShoeTest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Choose a brand on Landing Page", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 18
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 19
 testRunner.Given("Navigate to Shoe Store site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 20
 testRunner.When("Shoe Store is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 21
 testRunner.Then("Choose a brand lable should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 22
 testRunner.And("Choose a brand dropdown should be displayed and the dropdown items should be more" +
                        "than one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
 testRunner.And("Choose a brand Search button should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Verify All Months Menu Links including All Shoes and verify page Title")]
        [Xunit.TraitAttribute("FeatureTitle", "ShoeTests")]
        [Xunit.TraitAttribute("Description", "Verify All Months Menu Links including All Shoes and verify page Title")]
        [Xunit.TraitAttribute("Category", "ShoeTest")]
        [Xunit.InlineDataAttribute("January", new string[0])]
        [Xunit.InlineDataAttribute("February", new string[0])]
        [Xunit.InlineDataAttribute("March", new string[0])]
        [Xunit.InlineDataAttribute("April", new string[0])]
        [Xunit.InlineDataAttribute("May", new string[0])]
        [Xunit.InlineDataAttribute("June", new string[0])]
        [Xunit.InlineDataAttribute("July", new string[0])]
        [Xunit.InlineDataAttribute("August", new string[0])]
        [Xunit.InlineDataAttribute("September", new string[0])]
        [Xunit.InlineDataAttribute("October", new string[0])]
        [Xunit.InlineDataAttribute("November", new string[0])]
        [Xunit.InlineDataAttribute("December", new string[0])]
        [Xunit.InlineDataAttribute("All Shoes", new string[0])]
        public virtual void VerifyAllMonthsMenuLinksIncludingAllShoesAndVerifyPageTitle(string month, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ShoeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Month", month);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify All Months Menu Links including All Shoes and verify page Title", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 26
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 27
 testRunner.Given("Navigate to Shoe Store site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 28
 testRunner.When(string.Format("Click on \"{0}\" menu link", month), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 29
 testRunner.Then(string.Format("\"{0}\" page is loaded", month), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 30
 testRunner.And(string.Format("Verify Page Title Should Contains the \"{0}\" name", month), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Verify Shoe Brand Links in All Shoes page")]
        [Xunit.TraitAttribute("FeatureTitle", "ShoeTests")]
        [Xunit.TraitAttribute("Description", "Verify Shoe Brand Links in All Shoes page")]
        [Xunit.TraitAttribute("Category", "ShoeTest")]
        [Xunit.InlineDataAttribute("Jimmy Choo", new string[0])]
        [Xunit.InlineDataAttribute("Brian Atwood", new string[0])]
        [Xunit.InlineDataAttribute("Sergio Rossi", new string[0])]
        [Xunit.InlineDataAttribute("Charlotte Olympia", new string[0])]
        [Xunit.InlineDataAttribute("Valentino", new string[0])]
        [Xunit.InlineDataAttribute("Miu Miu", new string[0])]
        [Xunit.InlineDataAttribute("Lanvin", new string[0])]
        [Xunit.InlineDataAttribute("Old Gringo", new string[0])]
        [Xunit.InlineDataAttribute("Prada", new string[0])]
        [Xunit.InlineDataAttribute("Gucci", new string[0])]
        public virtual void VerifyShoeBrandLinksInAllShoesPage(string brand, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ShoeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Brand", brand);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Shoe Brand Links in All Shoes page", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 49
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 50
 testRunner.Given("Navigate to Shoe Store site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 51
 testRunner.When("Click on \"All Shoes\" menu link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 52
 testRunner.Then("\"All Shoes\" page is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 53
 testRunner.And(string.Format("Click on Brand \"{0}\" Name in All Shoes page", brand), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 54
 testRunner.Then(string.Format("\"{0}\" page is loaded", brand), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Verify Monthly Links in All Shoes page")]
        [Xunit.TraitAttribute("FeatureTitle", "ShoeTests")]
        [Xunit.TraitAttribute("Description", "Verify Monthly Links in All Shoes page")]
        [Xunit.TraitAttribute("Category", "ShoeTest")]
        [Xunit.InlineDataAttribute("January", new string[0])]
        [Xunit.InlineDataAttribute("February", new string[0])]
        [Xunit.InlineDataAttribute("March", new string[0])]
        [Xunit.InlineDataAttribute("April", new string[0])]
        [Xunit.InlineDataAttribute("May", new string[0])]
        [Xunit.InlineDataAttribute("June", new string[0])]
        [Xunit.InlineDataAttribute("July", new string[0])]
        [Xunit.InlineDataAttribute("August", new string[0])]
        [Xunit.InlineDataAttribute("September", new string[0])]
        [Xunit.InlineDataAttribute("October", new string[0])]
        [Xunit.InlineDataAttribute("November", new string[0])]
        public virtual void VerifyMonthlyLinksInAllShoesPage(string month, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ShoeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Month", month);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Monthly Links in All Shoes page", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 70
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 71
 testRunner.Given("Navigate to Shoe Store site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 72
 testRunner.When("Click on \"All Shoes\" menu link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 73
 testRunner.Then("\"All Shoes\" page is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 74
 testRunner.And(string.Format("Click on Brand \"{0}\" Name in All Shoes page", month), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
 testRunner.Then(string.Format("\"{0}\" page is loaded", month), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Verify Remind me of new shoes email address validation in all pages")]
        [Xunit.TraitAttribute("FeatureTitle", "ShoeTests")]
        [Xunit.TraitAttribute("Description", "Verify Remind me of new shoes email address validation in all pages")]
        [Xunit.TraitAttribute("Category", "ShoeTest")]
        [Xunit.InlineDataAttribute("January", "raj1!@#", "rajkumar.gajjela1@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("February", "raj2!@#", "rajkumar.gajjela2@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("March", "raj3!@#", "rajkumar.gajjela3@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("April", "raj4!@#", "rajkumar.gajjela4@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("May", "raj5!@#", "rajkumar.gajjela5@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("June", "raj6!@#", "rajkumar.gajjela6@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("July", "raj7!@#", "rajkumar.gajjela7@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("August", "raj8!@#", "rajkumar.gajjela8@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("September", "raj9!@#", "rajkumar.gajjela9@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("October", "raj10!@#", "rajkumar.gajjela10@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("November", "raj11!@#", "rajkumar.gajjela11@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("December", "raj12!@#", "rajkumar.gajjela11@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("All Shoes", "raj13!@#", "rajkumar.gajjela11@gmail.com", new string[0])]
        public virtual void VerifyRemindMeOfNewShoesEmailAddressValidationInAllPages(string month, string invalidEmailAddress, string validEmailAddress, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ShoeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Month", month);
            argumentsOfScenario.Add("InvalidEmailAddress", invalidEmailAddress);
            argumentsOfScenario.Add("ValidEmailAddress", validEmailAddress);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Remind me of new shoes email address validation in all pages", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 92
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 93
 testRunner.Given("Navigate to Shoe Store site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 94
 testRunner.When(string.Format("Click on \"{0}\" menu link", month), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 95
 testRunner.And("Click on Remind me of new shoes Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
 testRunner.Then("We should receive a message with \"Please enter an email address\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 97
 testRunner.When(string.Format("Enter an email address \"{0}\"", invalidEmailAddress), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 98
 testRunner.And("Click on Remind me of new shoes Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
 testRunner.Then("We should receive a message with \"Invalid email format. Ex. name@example.com\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 100
 testRunner.When(string.Format("Enter an email address \"{0}\"", validEmailAddress), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 101
 testRunner.And("Click on Remind me of new shoes Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 102
 testRunner.Then(string.Format("We should receive a message with \"Thanks! We will notify you of our new shoes at " +
                            "this email: {0}\"", validEmailAddress), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Verify Notify me when this shoe is available email address validation in all page" +
            "s")]
        [Xunit.TraitAttribute("FeatureTitle", "ShoeTests")]
        [Xunit.TraitAttribute("Description", "Verify Notify me when this shoe is available email address validation in all page" +
            "s")]
        [Xunit.TraitAttribute("Category", "ShoeTest")]
        [Xunit.InlineDataAttribute("February", "raj2!@#", "rajkumar.gajjela2@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("March", "raj3!@#", "rajkumar.gajjela3@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("April", "raj4!@#", "rajkumar.gajjela4@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("May", "raj5!@#", "rajkumar.gajjela5@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("June", "raj6!@#", "rajkumar.gajjela6@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("July", "raj7!@#", "rajkumar.gajjela7@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("August", "raj8!@#", "rajkumar.gajjela8@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("September", "raj9!@#", "rajkumar.gajjela9@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("October", "raj10!@#", "rajkumar.gajjela10@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("November", "raj11!@#", "rajkumar.gajjela11@gmail.com", new string[0])]
        [Xunit.InlineDataAttribute("All Shoes", "raj13!@#", "rajkumar.gajjela11@gmail.com", new string[0])]
        public virtual void VerifyNotifyMeWhenThisShoeIsAvailableEmailAddressValidationInAllPages(string month, string invalidEmailAddress, string validEmailAddress, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ShoeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Month", month);
            argumentsOfScenario.Add("InvalidEmailAddress", invalidEmailAddress);
            argumentsOfScenario.Add("ValidEmailAddress", validEmailAddress);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Notify me when this shoe is available email address validation in all page" +
                    "s", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 121
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 122
 testRunner.Given("Navigate to Shoe Store site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 123
 testRunner.When(string.Format("Click on \"{0}\" menu link", month), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 124
 testRunner.And("Click on Notification Email Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 125
 testRunner.Then("We should receive a message with \"Please enter an email address\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 126
 testRunner.When(string.Format("Enter a notification email address \"{0}\"", invalidEmailAddress), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 127
 testRunner.And("Click on Notification Email Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 128
 testRunner.Then("We should receive a message with \"Invalid email format. Ex. name@example.com\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 129
 testRunner.When(string.Format("Enter a notification email address \"{0}\"", validEmailAddress), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 130
 testRunner.And("Click on Notification Email Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 131
 testRunner.Then(string.Format("We should receive a message with \"Thanks! We will notify you when this shoe is av" +
                            "ailable at this email: {0}\"", validEmailAddress), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Verify Choose a brand Validation on HOME Page")]
        [Xunit.TraitAttribute("FeatureTitle", "ShoeTests")]
        [Xunit.TraitAttribute("Description", "Verify Choose a brand Validation on HOME Page")]
        [Xunit.TraitAttribute("Category", "ShoeTest")]
        [Xunit.InlineDataAttribute("ASICS®", new string[0])]
        [Xunit.InlineDataAttribute("Aquatalia by Marvin K", new string[0])]
        [Xunit.InlineDataAttribute("Børn", new string[0])]
        [Xunit.InlineDataAttribute("Brian Atwood", new string[0])]
        [Xunit.InlineDataAttribute("Flounce", new string[0])]
        [Xunit.InlineDataAttribute("House of Harlow 1960", new string[0])]
        [Xunit.InlineDataAttribute("Kalso Earth®", new string[0])]
        [Xunit.InlineDataAttribute("N.Y.L.A.", new string[0])]
        [Xunit.InlineDataAttribute("See by Chloé", new string[0])]
        [Xunit.InlineDataAttribute("UGG® Australia", new string[0])]
        [Xunit.InlineDataAttribute("Alice + Olivia", new string[0])]
        public virtual void VerifyChooseABrandValidationOnHOMEPage(string brand, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ShoeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Brand", brand);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Choose a brand Validation on HOME Page", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 148
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 149
 testRunner.Given("Navigate to Shoe Store site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 150
 testRunner.When("Click on Choose a brand Search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 151
 testRunner.Then("We should receive a message with \"Please Select a Brand\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 152
 testRunner.Given(string.Format("Select some value from the dropdown \"{0}\"", brand), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 153
 testRunner.When("Click on Choose a brand Search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 154
 testRunner.Then(string.Format("\"{0}\" page is loaded", brand), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Verify Shoe Brand Deails in all Month\'s pages")]
        [Xunit.TraitAttribute("FeatureTitle", "ShoeTests")]
        [Xunit.TraitAttribute("Description", "Verify Shoe Brand Deails in all Month\'s pages")]
        [Xunit.TraitAttribute("Category", "ShoeTest")]
        [Xunit.InlineDataAttribute("January", new string[0])]
        [Xunit.InlineDataAttribute("February", new string[0])]
        [Xunit.InlineDataAttribute("March", new string[0])]
        [Xunit.InlineDataAttribute("April", new string[0])]
        [Xunit.InlineDataAttribute("May", new string[0])]
        [Xunit.InlineDataAttribute("June", new string[0])]
        [Xunit.InlineDataAttribute("July", new string[0])]
        [Xunit.InlineDataAttribute("August", new string[0])]
        [Xunit.InlineDataAttribute("September", new string[0])]
        [Xunit.InlineDataAttribute("October", new string[0])]
        [Xunit.InlineDataAttribute("November", new string[0])]
        [Xunit.InlineDataAttribute("December", new string[0])]
        public virtual void VerifyShoeBrandDeailsInAllMonthsPages(string month, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ShoeTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Month", month);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Shoe Brand Deails in all Month\'s pages", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 171
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 172
 testRunner.Given("Navigate to Shoe Store site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 173
 testRunner.When(string.Format("Click on \"{0}\" menu link", month), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 174
 testRunner.And(string.Format("\"{0}\" page is loaded", month), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 175
 testRunner.Then(string.Format("Validate Brand Details in Monthly pages \"{0}\"", month), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ShoeTestsFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ShoeTestsFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
